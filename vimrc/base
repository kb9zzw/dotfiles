" disable modelines
set nomodeline

" number lines
set nu

" tabs to spaces
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab

" incremental search
set incsearch

" highlight search results
set hlsearch

" syntax highlighting
syntax on
filetype plugin indent on
colorscheme slate

" shell
set shell=/bin/bash

nmap <F9> :set invpaste<CR>
nmap <F10> :set invnumber<CR>:GitGutterToggle<CR>:SyntasticToggleMode<CR>

" Window split navigation
nmap <TAB> <C-w>
nmap <TAB><TAB> <C-w>w

" no 80char check on puppet
let g:syntastic_puppet_puppetlint_args='--no-80chars-check'

" disable code folding on markdown
let g:vim_markdown_folding_disabled = 1

" left-justify comments
let g:NERDDefaultAlign = 'left'

" nerdtree file browser
map <C-o> :NERDTreeToggle<CR>

" status line
set laststatus=2
set noshowmode

let g:lightline = {
      \ 'colorscheme': 'powerline',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head'
      \ },
      \ }

" cloudformation filetype
au BufRead,BufNewFile *.cfn.yml set filetype=yaml.cloudformation
au BufRead,BufNewFile *.cfn.yaml set filetype=yaml.cloudformation
au BufRead,BufNewFile *.cfn set filetype=yaml.cloudformation

" linting
let g:ale_linters = { 'python': ['pylint'],
      \ 'yaml.cloudformation': ['yamllint', 'cloudformation'],
      \ 'yaml': ['yamllint'] }

highlight ALEError ctermbg=lightred
